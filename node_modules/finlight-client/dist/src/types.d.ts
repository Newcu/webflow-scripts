export interface BasicArticle {
    link: string;
    title: string;
    publishDate: Date;
    authors: string;
    source: string;
    language: string;
    sentiment?: string;
    confidence?: number;
}
export interface Article extends BasicArticle {
    content: string;
    summary?: string;
}
export interface ApiResponse<T> {
    status: string;
    totalResults: number;
    page: number;
    pageSize: number;
    articles: T[];
}
export type GetBasicArticleApiResponse = ApiResponse<BasicArticle>;
export type GetArticleApiResponse = ApiResponse<Article>;
export interface GetBasicArticlesParams {
    query: string;
    source?: string;
    from?: string;
    to?: string;
    language?: string;
    order?: 'ASC' | 'DESC';
    pageSize?: number;
    page?: number;
}
export type GetExtendedArticlesParams = GetBasicArticlesParams;
export interface GetArticlesWebSocketParams {
    query: string;
    source?: string;
    language?: string;
    extended: boolean;
}
